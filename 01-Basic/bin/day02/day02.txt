回顾:
1.Linux:
    开源的操作系统、免费
	目录、挂载点、安全级别高
	服务器操作系统，java主要是服务器端开发
	pwd、ls、cd 
	绝对路径(根目录)、相对路径(当前目录)
2.java开发环境:
  1)编译运行过程:常见面试题
      编译期:.java源文件，经过编译，生成.class字节码文件
	  运行期:JVM加载.class并运行.class
	跨平台，一次编程到处使用
  2)JVM:java虚拟机
    JRE:java运行环境 JVM+系统类库
	JDK:java开发工具包 JRE+编译、运行等工具
  3)配置环境变量:了解
3.eclipse:
    IBM、开源的、免费的、解压即可

System.out.println("你好");

Linux分两种:
1.带图形界面的
2.不带图形界面的


当前在/opt/jdk下，转到/opt/eclipse下

绝对路径: cd /opt/eclipse
相对路径: cd ../eclipse--------/opt/eclipse

Linux运行程序两种方式:
1.找到后双击
2.在终端中写出它的完整路径


/home/soft01/tts9/eclipse/eclipse

假设当前路径在/home/soft01/tts9/eclipse
./eclipse启动






笔记:
1.变量:存数的，代词，指代的就是它所存的那个数
  1)声明:
      int a; //声明一个整型变量，名为a
      int b,c,d; //声明三个整型变量，名为b,c,d
  2)命名:
    2.1)只能包含字母、数字、_和$符，
	    并且不能以数字开头
	2.2)严格区分大小写
	2.3)不能使用关键字
	2.4)可以中文命名，但不建议
	    建议:见名知意、驼峰命名法
  3)初始化:第一次赋值
    3.1)声明的同时初始化:
	      int a=250; //声明整型变量a并赋值为250
	3.2)先声明后初始化:
	      int a; //声明整型变量a
		  a=250; //给变量a赋值给250
  4)使用:
    4.1)必须与数据类型匹配
	      int a=3.14; //编译错误，类型不匹配
	4.2)对变量的操作就是对它所存的那个数的操作
	      int a=5;
		  int b=a+10; //取出a的值5，加10后，再赋值给整型变量b
          a    =a+10; //取出a的值5，加10后，再赋值给a
		              //在a本身基础之上增10
		  System.out.println("a"); //a，双引号中的原样输出
		  System.out.println(a); //输出a的值15
	4.3)变量在用之前必须声明并初始化
	      System.out.println(m); //编译错误，m未声明
		  int m;
		  System.out.println(m); //编译错误，m未初始化
2.基本数据类型:
  1)int:整型，4个字节，-21个多亿到21个多亿
    1.1)整数直接量默认为int型，但不能超范围，
	    超范围则编译错误
	1.2)两个整数相除，结果还是整数，小数位无条件舍弃
	1.3)运算时超范围会发生溢出，溢出是需要避免的
  2)long:长整型，8个字节，很大很大很大
    2.1)long型直接量需要数字后加L或l
	2.2)运算时为了避免溢出建议在第1个数字后加L
	2.3)System.currentTimeMillis()
	    获取自1970.1.1零时到此时此刻的毫秒数
  3)double:浮点型，8个字节，很大很大很大
    3.1)浮点型直接量默认为double型，
	    若表示float型需在数字后加f或F
	3.2)double运算时有舍入误差，所以精确运算场合不适合
  4)boolean:布尔型，1个字节
    4.1)只能取值为true和false
  5)char:字符型，2个字节
    5.1)java中的char采用Unicode编码格式，
	    每个字符(char)对应一个码(int)
		char字符是表现形式，实质上是int码(0到65535之间)
	5.2)字符必须放在单引号中，有且仅有一个
3.基本类型间的转换:
    类型从小到大依次为:
	  byte-short-int-long-float-double
	       char--
  1)两种形式:
    1.1)自动类型转换:从小类型到大类型
	1.2)强制类型转换:从大类型到小类型
	      语法:(要转换成的类型)变量
		  强转有可能会溢出或精度的丢失
  2)两点规则:
    2.1)整数直接量可以直接赋值给byte,short,char，
	    但不能超范围
	2.2)byte,short,char型变量参与运算时，
	    先一律转为int再运算
4.Scanner的用法:
  1)在package的下面:
      import java.util.Scanner;
  2)在main()方法中:
      Scanner scan = new Scanner(System.in);
  3)在第2步之下:
      System.out.println("请输入年龄:");
      int age = scan.nextInt();
	  System.out.println("请输入价格:");
	  double price = scan.nextDouble();


练习:
1.声明int型变量age用于存储你的年龄
  声明double型变量price用于存储你今日早餐消费的金额
  声明char型变量gender用于存储你的性别
  声明boolean型变量isMerried用于存储你已婚与否的状态
2.新建包day03，在day03中:
    1)创建类AgeTest，要求:
	    接收用户输入的年龄age，并输出
    2)创建类LeapYear，要求:
	    接收用户输入的年份year，并输出
	3)创建类ScoreLevel，要求:
	    接收用户输入的成绩score，并输出
	4)创建类CommandBySwitch，要求:
	    接收用户输入的命令command，并输出
	5)课后作业第13题，创建类Cashier，并完成要求




课后作业题: 第7,11,12不用写















  int age = 25;











给变量赋值:
1)赋一个固定的值:
    int a=5;
2)接收用户输入的值:-----Scanner
    int a=?;
3)系统随机生成的值:-----周三讲
    int a=?;
















System.out.println('2'+'2'); //100




short s1=6;
short s2=8;
short s3=(short)(s1+s2);











char字符是表现形式，实质上是int码
字符必须放在单引号中，有且仅有一个

Unicode编码格式--------0到65535
  ASCII码:
    'a'---97
	'A'---65
	'0'---48


0-------------0
'0'-----------48


System.out.println(2+2);     //4
System.out.println('2'+'2'); //100


char c1=97;
System.out.println(c1); //a


char c2='\\';











char         int
敌-----------1234
军-----------5678
来-----------9876
袭-----------1122


















直接量超范围为编译错误
运算时超范围为溢出


有的时候超范围就是编译错误
有的时候超范围就是溢出











1470033894132
1470033905886





-2147483648------+1
-2147483647------+2
-2147483646------+3

0
1
2
...
2147483647
-2147483648





DataTypeDemo






财务系统ERP
  BigDecimal


精确运算的场合，不适合用double


double a=3.0,b=2.9;
System.out.println(a-b); //0.100000000000009

double a=6.0,b=4.9;
System.out.println(a-b); //1.099999999999996
                           









二进制

十进制，
1/3-------0.333333333...
2/3-------0.666666666...

2/5-------0.4












1970.1.1零时

1年有-----365*24*60*60*1000毫秒
     -----31536000000(long型)








long a = 1000000000*2*10L; //200亿

long b = 1000000000*3*10L; //不是300亿

long c = 1000000000L*3*10; //300亿











int balance=2147483647;
balance=balance+1;
System.out.println(balance); //-2147483648













那么多种类型的目的，为了适应不同人的不同需求
每种类型所占用的内存空间是不一样的

够用就行

年龄37-------int类型(4个字节)
年龄37-------long类型(8个字节)



1G=1024M(兆)
1M=1024KB(千字节)
1KB=1024B(字节)
1B=8Bit(位)



1G=1024*1024*1024-----1073741824字节













适应不同人的不同需求

别墅
四居室
三居室
两居室
一居室
开间
地下室















int sum=100;
sum=sum+100;  //在sum本身基础之上增100
              //0到100
              //10到110
			  //100到200





java:
    int a;
    int b=a+10; //编译错误

c:
    int a;
    int b=a+10; //正确，随机给了一个值














int a=37;    //不建议
int 年龄=37; //不建议，直观但不专业
int nianLing=37; //不建议，既不直观也不专业
int age=37;  //建议"见名知意"

"驼峰命名法"

score,myScore,myJavaScore










  
                  twoAbcMno
erJuanBianYaQi----二卷变压器









I      love    You
张三           李四
李四           王五
王五           赵六
赵六           张三








早期的计算机-------算数的
现在的计算机-------算数的


计算机-------离不开数据

www.taobao.com-----------------一个数据
淘宝首页-----------------------一堆数据
手机壳-------------------------一个数据
一堆手机壳---------------------一堆数据
详细页面-----------------------一堆数据
购物车-------------------------一堆数据
结算---------------------------一堆数据















