回顾:
1.变量:存数的，代词，指代的就是它所存的那个数
  1)声明:
      int a;
	  int b,c;
  2)初始化:第一次赋值
      int a=5;
	  int b;
	  b=5;
  3)使用:
      int a=5.6; //编译错误
	  int b=5;
	  int c=b+10;
	  b=b+10; //在b本身基础之上增10
	  System.out.println(m); //编译错误
	  int m;
	  System.out.println(m); //编译错误
  4)命名:
2.基本数据类型:
  1)int:整型，4个字节，5,25,250...
  2)long:长整型，8个字节，5L,10000000000L...
  3)double:浮点型，8个字节，5.8,3.14159...
  4)boolean:布尔型，1个字节，true,false
  5)char:字符型，2个字节，'你','m',' '...
3.数据类型间的转换:
   自动类型转(小到大)，
   强制类型转(大到小)----有可能溢出和精度丢失
   short s1 = 5;
   short s2 = 6;
   short s3 = (short)(s1+s2);
4.Scanner的用法:
  1)import java.util.Scanner;
  2)Scanner scan = new Scanner(System.in);
  3)int age = scan.nextInt();
    double price = scan.nextDouble();




笔记:
1.运算符:
  1)算术:+,-,*,/,%,++,--
  2)关系:>,<,>=,<=,==,!=
  3)逻辑:&&,||,!
  4)赋值:=,+=,-=,*=,/=,%=
  5)字符串连接:+
  6)三目运算符:boolean?数1:数2
2.分支结构:有条件的执行某语句，并非每句必走
  1)if结构:1条路
  2)if...else结构:2条路
  3)if...else if结构:多条路
  4)switch...case结构:多条路
    优点:结构清晰、效率高
	缺点:整数、相等
	break:跳出switch











练习一:
1.在收银柜台收款程序基础之上，实现：
  当总价大于或等于499时，享受减100元优惠
2.接收用户输入的公员积分score，
  计算并输出会员所对应的折扣discount:
    若积分小于2000，则折扣为0.9
    若积分大于等于2000并且小于4000，则折扣为0.8
    若积分大于等于4000并且小于8000，则折扣为0.7
    若积分大于8000，则折扣为0.6
练习二:
1.接收用户输入的choice做如下操作，
  要求：使用switch结构实现
     若用户输入的数据为1，则提示"请购物"
     若用户输入的数据为2，则提示"购物结算"
     若用户输入的数据为3，则提示"欢迎下次光临"
     若用户输入其它数据，则提示"输入错误"







if(command==1){
}else if(command==2){
}else if(command==0){
}else{
}



int a=5,b=8;
int max=a>b?a:b;
System.out.println("max="+max);

if(a>b){
  ...
  ...
  max=a;
}else{
  ...
  ...
  max=b;
}














if(score>=0 && score<=100){
			if(score>=90){
				System.out.println("A-优秀");
			}else if(score>=80){
				System.out.println("B-良好");
			}else if(score>=60){
				System.out.println("C-中等");
			}else{
				System.out.println("D-不及格");
			}
		}else{
			System.out.println("成绩不合法");
		}












判断成绩的等级:
A:成绩大于等于90
B:成绩大于等于80并且小于90
C:成绩大于等于60并且小于80
D:成绩小于60

1)ABCD，只有可能走其中之一
2)若没有最后的else，ABC并非必走其中之一
3)若有最后的else，ABCD必走其中之一

int score = 45;
if(score>=90){
  A-优秀
}else if(score>=80){
  B-良好
}else if(score>=60){
  C-中等
}else{
  D-不及格
}











int score = 95;
if(score>=90){
  A-优秀
}else{
  if(score>=80 && score<90){
    B-良好
  }else{
    if(score>=60 && score<80){
	  C-中等
	}else{
	  if(score<60){
	    D-不及格
	  }
	}
  }
}











if(有黄瓜吗?){
  制作黄瓜沙拉
}else{
  
}







2条路

if(money>=totalPrice){ //钱够
  计算找零并输出
}










顺序结构:从上往下逐行执行，每句必走
分支结构:有条件的执行某语句，并非每句必走
循环结构:


满500打8折:
  打8折-------有条件的执行

满499减100:
  减100-------有条件的执行










米
面
水果--------9.8一斤

半斤--------0.5斤

超市数量------------double
淘宝数量------------int
股票数量------------int


单价、给的钱、总价、找零-----double
数量--------------------------double









4个经典案例








平年------2月(28)-----365
闰年------2月(29)-----366



闰年的判断公式:
1.能被4整除，并且，不能被100整除
或者
2.能被400整除

1)year%4==0 && year%100!=0
||
2)year%400==0

2000是闰年
2004是闰年
2001不是闰年

(year%4==0 && year%100!=0) || year%400==0




a=a+1;
a++;
++a;
a+=1;


System.out.println("helloWorld");







18到50之间

age>=18
&&
age<=50

88
5








(2+5)*6-5/6


!          false  true
下雨了吗?  true   false


能结帐吗?    true   true   true  false
1.有现金吗?  true   false  true  false
或者---||
2.有卡吗?    false  true   true  false

能毕业吗?       false  false  false  true
1.考试及格吗?   true   false  false  true
并且----&&
2.出勤够80%吗?  false  true   false  true












若想干某个事，是由一个条件控制的-----关系
若想干某个事，是由多个条件控制的-----逻辑












我的年龄大于你的年龄--------------对/错
        >,<
我的体重小于或等于你的体重--------对/错
        <=,>=
我的身高等于你的身高--------------对/错
        ==,!=






















