<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 使用无参构造器创建对象 
	id属性:bean的名称，要求唯一
	class属性：类名，要去写完整的类名
	java.util.Date
	-->
	<bean id="stu1" class="basic.Student"></bean>
	<bean id="date1" class="java.util.Date"></bean>
	
	<!-- 使用静态工厂方法创建对象 
	factory-method属性：指定一个静态方法，容器会调用该方法来创建对象
	-->
	<bean id="cal1" class="java.util.Calendar" factory-method="getInstance"></bean>
	
	<!-- 使用实例工厂方法创建对象
	factory-bean属性：要调用工厂方法 的对象的id
	factory-method属性:指定要调用的工厂方法
	注意：该方法是一个实例方法
	 -->
	<bean id="time1" factory-bean="cal1" factory-method="getTime"></bean>
	
	<!-- 生命周期相关的两个方法 
	init-method属性：指定初始化方法，容器在创建对象之后，会立即调用该对象的初始化方法
	destroy-method属性：指定销毁方法，容器在关闭之前，会调用该对象的销毁方法
	-->
	<bean id="eb1" class="basic.ExampleBean" 
	init-method="init" destroy-method="destroy" scope="prototype"></bean>
	
	<!-- 延迟加载
	lazy-init属性：如果为true，表示延迟加载 -->
	<bean id="lb1" class="basic.LazyBean" lazy-init="true"></bean>
</beans>