字符串类型
char和varchar2的类型：
char存放定长字符，即存不满则补空格，特点，浪费空间，节省时间
varchar2存放变成字符，存多少占用多少，特点，浪费时间，节省空间

char和varchar2的存储编码
默认是字节，可指定为字符
char(10),等价于char(10 byte)
指定单位为字符：char(10 char),20个字节
varchar(20),等价于varchar2(10 byte)
指定单位为字符：char(10 char),20个字节
每个英文字符占一个字节，每个中文字符按编码方式不同，占2-4个字节


char和varchar2的最大长度
char最大取值为2000字节，即最多保存2000个英文字符，1000个汉字（GBK）
varchar2最大取值为4000字节，最多保存4000个英文字符，2000个汉字(GBK)
char可以不指定长度，默认值为1，varchar2必须指定长度


long和clob类型
long：varchar2加长版，存储变长字符串，最多存2GB的字符串数据
long有很多限制：每个表只能有一个long类型列；不能作为主键，不能建立索引，不能出现在查询条件中
clob：存储定长或变长字符串，最多达4GB的字符串数据



------------------------------------
要特别注意，oracle中字符串下标是从1开始的。substr两个数字含义也不再是含头不含尾，而是
从当前位置开始，取多少个字符

字符串函数：
concat和"||"
concat(char1,char2)
如果char1,char2任何一个为null，相当于连接了一个空格
select concat(concat(ename,':'),sal) from emp;
多个字符串连接，用||更直观
select ename||':'||sal from emp;


length：
length(char)
如果字符类型是varchar2，返回类型的实际长度，如果字符是char，长度还要包括后补的空格
select ename,length(ename) from emp;


upper,lower和initcap
initcap(char)用于将字符串中每个单词的首字符大写，其他字符小写，单词之间用空格分隔
select upper('hello world'),lower('hello world'),initcap('hello world') from dual;
补充，dual伪表，只是为了符合语法要求，因为upper('hello world'),lower('hello world'),initcap('hello world')与其他任何表无关，
如果写成其他表查询，那么会输出多条相同的语句。




trim.ltrim.rtrim
作用：截取子串
语法形式：
trim(c2 from c1)从c1的前后截取c2
ltrim(c1,c2) 从c1的左边截去c2
rtrim(c1,c2）从c1的右边截取c2
如果没有c2，就去除空格

select trim('e' from 'elite') as "t1",
ltrim('elite','e') as "t2",
rtrim('elite','e') as "t3" from dual;


select ltrim('easedeejfie','ead') from dual;
规则：从左边一直找右边中包含的字符，直至不能被删除截止
有e删e，有a删a，遇到s，右边字符串中没有s，故停止。




lpad,rpad
补位函数，用于在字符串char1的左端或右端用char2补足到n位，char2可重复多次
lpad(char1,char2)左补位函数
rpad(char1,char2)右补位函数

在emp表中使用左补位，将sal用$补齐6位
右对齐：select ename ,lpad(sal,6,'$') as "salary" from emp
select lpad(ename,10,'#') from emp;
如果ename有11位，则会截取掉最后一位



substr(char,m,n)
用于获取字符串的子串，返回char中从m位开始取n个字符
若m=0，则从首字符开始，若m为负数，则从尾部开始
如果没有设置n或者n的长度超过了char的长度，则取到字符串末尾为止
select substr('Doctor Who travels in TARDISk,8,25) from dual;
请注意，字符串的首位计数从1开始



instr(char1,char2,n,m)
返回子串char2在源字符串char1中的位置
参数：
从n的位置开始搜索，没有指定n，则从第一个字符开始搜索
m用于指定子串的第m次出现次数，如果不指定取值为1
如果在char1中没有找到char2，则返回0
select instr('Doctor Who','Who') as "words" from dual; 
--8


----------------------------------------
oracle数值操作
数值类型：
number（p）表示整数
number（p,s）表示浮点数
若指定了s但没有指定p，则p默认为38，如列名number(*,s)



数值函数：round，trunc，mod，ceil和floor


定位小数点即可，若为截取，则截掉小数点后面的数，若为四舍五入，则对小数点后面的数进行四舍五入

round(n,m)，用于四舍五入到指定的m位。
m若为负数，则四舍五入到小数点前m位，m缺省，则默认值为0
select round(45.678,2) from dual; --45.68
select round(45.678,0) from dual; --46
select round(45.678,-1) from dual; --50


trunc(n,m)用于截取
select trunc(45.678,2) from dual; --45.67
select trunc(45.678,0) from dual; --45
select trunc(45.678,-1) from dual; --40


mod(m,n)：
若n为0，则直接返回m
select ename,sal,mod(sal,1000) from emp;


ceil(n):取大于或者等于n的最小整数值
floor(n):取小于或等于n的最大整数值
select ceil(45.678) from dual ; --46
select floor(45.467) from dual; --45


--------------------------------------------
Oracle日期操作：
日期类型：date，timestamp
日期关键字：sysdate,systimestamp
日期转换函数：to_date,to_char
日期常用函数：last_day,add_months,months_between,next_day,least,greatest,extract


date:在数据库中的存储固定为7个字节，分别为世纪，年，月，日，时，分，秒
timestamp：与date区别是不仅可以保存日期和时间，还能保存小数秒
格式：
 第1-7字节：和date相同
 第8-11字节：纳秒，采用4个字节存储，内部运算类型为整型
 create table test(
 c1 date,
 c2 timestamp);


简述date和timestamp的区别
date的最小单位是秒，timestamp包含小数位的秒。如果需要秒以下的单位，需要用timestamp。



sysdate:当前系统时间，默认格式为DD-MON-RR
systimestamp:返回当前系统日期和时间，精确到毫秒


to_date:
YY 2位数字的年份
YYYY 4位数字的年份
MM 2位数字的月份
MON 简拼的月份
MONTH 全拼的月份
DD 2位数字的天数
DAY 周几的全拼
HH24 24小时制的小时
HH12 12小时制的小时
MI 显示分钟
SS 显示秒


按照“2009年4月11日 20时35分10秒”格式显示系统时间。
SELECT TO_CHAR(SYSDATE, 'yyyy"年"mm"月"dd"日" hh24"时"mi"分"ss"秒"' ) FROM DUAL;

构造查询语句，产生类似于下面形式的结果：
NAME   HIREDATE       REVIEW
ALLEN 1980年12月17日 1980/12/17
SELECT  ename, TO_CHAR(hiredate, 'yyyy"年"mm"月"dd"日"') as "HIREDATE", TO_CHAR(hiredate, 'yyyy"/"mm"/"dd') as "REVIEW" from dual；
请注意，"/"是非法字符，因此，使用双引号



to_date：
select ename,hiredate from emp where hiredate > to_date('2002-02-02','YYYY-MM-DD')

to_char（将其他类型的数据转换为字符类型）,要特别注意：
若格式字符串中出现汉字或者其他非符号字符时需要用双引号
select ename,to_char(hiredate,'YYYY"年"MM"月"DD"日"') from emp;


last_day(date)返回日期date所在月的最后一天
select last_day('20-2月-09')from dual;

add_months(date,i):返回日期date加上i个月后的日期值
select ename,add_months(hiredate,20*12) as "20周年" from  emp;


months_between(date1,date2)
返回两个日期之间隔了多少个月,
请注意：
除非两个日期间隔是整数月，否则会得到带小数位的结果，比如1.29个月
select ename,months_between(sysdate,hiredate) as＂hiredate" from emp;
select cusid,orderdate,shipdate,round(months_between(shipdate,orderdate)) as "Time Taken" from ord;


next_day(date,char)返回date日期数据的下一个周几，用数字1-7表示周日或者周六
注意，next_day不是明天！
--查询下个周三是几号
select next_day(sysdate,4) as "next_wedn" from dual;



least,greatest
least(expr1,exmpr2,expr3...)
greatest(expr1,exmpr2,expr3...)
返回结果是参数列表中的最大或者最小的值，参数类型必须一致
在比较之前，在参数列表第二个以后的参数会被隐含的转换为第一个参数的数据类型，
所以如果可以转换，则继续比较，否则，报错
select least(sysdate,'10-10月-08') from dual;



extract(date from datetime):
从参数datetime中提取参数date指定的数据，比如提取年、月、日

select extract(year from sysdate) current_year from dual;
select extract(hour from timestamp '2008-10-10 10:10:10') from dual;



-----------------------------------
空值操作：
NULL的操作：
插入NULL值：
insert into stu values (1001,'li',NULL); --显示插入NULL
insert into stu(id,name) values (1002,'zhang');--隐式插入NULL

更新NULL


NULL条件查询：
请注意，NULL不等于任何值,判断的时候，使用的是is null，而不是=null
select * from stu where gender is null;




空值函数
NVL（expr1,expr2）将null转变为非NULL值
如果expr1是null，则取值expr2，expr2是实际值
expr1和expr2可以是任何数据类型，但两个参数的数据类型必须是一致的
select ename,sal,comm,sal+nvl(comm,0) as "salary" from emp;


nvl2(expr1,expr2,expr3）
如果expr1不是null，则返回expr2，否则返回expr3
select ename ,sal,comm,nvl2(comm,sal+comm,sal) as "salary" from emp;



构造SQL语句，列出Customer数据表中生日未提供的客户记录。
select cust_id, cnamefrom Customer where birthday is null;


查询emp表，列出员工的编码、姓名和入职时间。
要求：如果入职时间为null，则显示'not available'；如果入职时间不为null，则按照yyyy-mm-dd格式显示。
select empno, ename, nvl2(hiredate ,to_char(hiredate, 'yyyy-mm-dd'), 'not available') from emp;