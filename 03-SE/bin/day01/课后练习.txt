SE
DAY01:
知识点:String相关API,StringBuilder相关API
1:输出字符串"HelloWorld"的字符串长度
2:输出"HelloWorld"中"o"的位置
3:输出"HelloWorld"中从下标5出开始第一次出现"o"的位置
4:截取"HelloWorld"中的"Hello"并输出
5:截取"HelloWorld"中的"World"并输出
6:将字符串"  Hello   "中两边的空白去除后输出
7:输出"HelloWorld"中第6个字符"W"
8:输出"HelloWorld"是否是以"h"开头和"ld"结尾的。
9:将"HelloWorld"分别转换为全大写和全小写并输出。
10:将"大家好!"修改为:"大家好!我是程序员!"并输出。
   然后将"大家好!我是程序员!"修改为:"大家好!我是优秀的程序员!"并输出
   然后再修改为:"大家好!我是牛牛的程序员!"并输出
   然后在修改为:"我是牛牛的程序员!"并输出

DAY02:
知识点:字符串支持正则表达式相关API,Object相关API，包装类相关API
1:输出一个字符串，然后若该字符串是一个整数，则转换为整数后输出乘以10后的结果
  若是小数，则转换为一个小数后输出乘以5后的结果，若不是数字则输出"不是数字"
  需要使用正则表达式进行判断。
2:将字符串123,456,789,012根据","拆分，并输出拆分后的每一项
3:将字符串"123abc456def789ghi"中的英文部分替换为"#char#"
4:定义一个类Person，如下:
  public class Person{
	private String name;
	private int age;
	private int salary;
        //定义构造方法，以及属性get,set方法
  }
  重写toString方法，返回字符串格式如:"张三,25,5000"
  重写equals方法，要求名字相同就认为内容一致。

DAY03:
知识点:Date相关API，SimpleDateFormat相关API,Calendar相关API，Collection相关API
1:使用Date输出当前系统时间，以及3天后这一刻的时间
2:将当前系统时间以"yyyy-MM-dd HH:mm:ss"格式输出
3:输入某人生日，格式为"yyyy-MM-dd"，输出到现在为止经过了多少周。
4:输入一个生产日期格式"yyyy-MM-dd",再输入一个数字(保质期的天数)。
  然后经过计算输出促销日期，促销日期为:该商品过期日前2周的周三
5:创建一个集合，存放字符串"one","two"，"three"
  然后输出该集合的元素个数。
  然后输出该集合是否包含字符串"four"
  然后输出集合是否不含有任何元素
  然后清空集合
  然后输出该集合的元素个数
  然后输出集合是否不含有任何元素

DAY04:
知识点:Collection相关API，迭代器，新循环，List相关API，集合与数组相互转换，List集合排序
1:创建一个集合c1，存放元素"one","two"，"three"
  在创建一个集合c2，存放元素"four","five","six"
  然后将c2元素全部存入c1集合
  然后在创建集合c3,存放元素"one,five"
  然后输出集合c1是否包含集合c3的所有元素
  然后将c1集合中的"two"删除后再输出c1集合
  
2:创建一个集合，存放元素"1","$","2","$","3","$","4"
  使用迭代器遍历集合，并在过程中删除所有的"$"，
  最后再将删除元素后的集合使用新循环遍历，并输出每一个元素。

3:创建一个List集合(ArrayList,LinkedList均可)
  存放元素"one","two","three","four"。
  获取集合第二个元素并输出。
  将集合第三个元素设置为"3"
  在集合第二个位置上插入元素"2"
  删除集合第三个元素。   
  
4:创建一个List集合并添加元素0-9
  然后获取子集[3,4,5,6]
  然后将子集元素扩大10倍
  然后输出原集合。
  之后删除集合中的[7,8,9]

5:创建一个List集合，并添加元素0-9
  将集合转换为一个Integer数组并输出数组每一个元素

6:创建一个字符串数组:{"one","two","three"}
  然后将该数组转换为一个List集合

7:创建一个List集合，并存放10个随机数，然后排序该集合
  后输出。


DAY05:
知识点:List集合排序，比较器的使用，队列，栈，Map的相关API
1:创建一个类:
  public class Person{
	private String name;
	private int age;
	private int salary;
        //定义构造方法，以及属性get,set方法
  }
  实现Comparable接口，并重写抽象方法comparaTo()，比较规则为年龄小的人小。
 
2:创建一个List集合，存入5个Person实例，属性值任取。然后排序该集合

3:创建一个比较器来比较Person类的实例，比较规则为工资多的大。然后按照
  该比较器再排序第2题中的List集合

4:创建一个队列，存入Integer类型元素1,2,3,4,5
  然后遍历队列并输出每个元素

5:创建一个栈，存入Integer类型元素1,2,3,4,5
  然后遍历队列并输出每个元素

6:创建一个Map，保存某个学生的成绩:
  语文   99
  数学   98
  英语   97
  物理   96
  化学   95
  然后输出物理的成绩。
  然后将化学的成绩设置为96
  然后删除英语这一项。
  然后遍历该Map分别按照遍历key，Entry，value
  的形式输出该Map信息。


DAY06:
知识点:File相关API，RandomAccessFile相关API
1:在当前目录下创建一个文件"myfile.txt",并在内部随意输入一些文字后保存
  然后通过File输出该文件的名字，大小，最后修改时间。
2:使用File在当前目录下创建一个名为"file.txt"的文件。
3:使用File在当前目录下创建一个名为"dir"的目录。
4:删除file.txt文件。
5:删除dir目录。
6:获取并输出当前目录下的所有文件和目录的名字
7:获取并输出当前目录下所有文件的名字
8:复制当前目录中"myfile.txt"文件，并取名为"myfile_copy.txt"
  分别使用单字节形式复制，以及字节数组形式复制  
9:创建一个"raf.txt"的文件，并在其中写出一个int的最大值，long的最大值，
  然后将其分别读取出来并输出。

DAY07:
知识点:文件流,缓冲流，对象流，转换流
1:使用文件流复制"myfile.txt"文件，并取名为"myfile1.txt"
2:使用缓冲流复制"myfile.txt"文件，并取名为"myfile2.txt"  
3:创建类:
  public class Person{
	private String name;
	private int age;
	private int salary;
        //定义构造方法，以及属性get,set方法
  }
  实现序列化接口，并定义版本号。
4:创建一个Person对象，内容：张三,25,5000
  然后将该对象写入到文件MyPerson.obj中。
5:读取MyPerson.obj文件，将Person对象读取出来并输出。  
6:使用字符流复制当前项目src目录中day07目录中随意一个课上写过的.java文件
  到当前项目根目录下。

DAY08:
知识点:PrintWriter,BufferReader,java异常处理
1:将控制台输入的每一行字符串使用缓冲字符流输出流PrintWriter按行写入到文件note.txt中
2:将note.txt文件中每一行字符串读取出来并输出到控制台。

DAY09:
知识点:线程的创建，线程相关API,线程并发安全问题
1:使用线程方式一创建两个线程:分别输出1000次，你好和再见
2:使用线程方式二创建两个线程:分别输出1000次，你好和再见
3:使用匿名内部类方式创建两个线程:分别输出1000次，你好和再见
4:创建一个线程，每秒输出一次当前系统时间:yyyy-MM-dd HH:mm:ss

DAY10:
知识点:TCP网络编程
1:将聊天室客户端和服务端代码改造，可以允许在控制台输入每一行字符串，然后
  发送给服务端，服务端读取到后输出到服务端的控制台。

DAY11:
知识点:TCP网络编程
1:将聊天室完成案例在写一次。

DAY12:
知识点:DOM进行XML读写
1:将emp.xml文件中按照课上解析emplist的形式解析出来，并输出每个员工信息
2:任意创建几个Emp对象并充实内容后写入到myemplist.xml文件。

ORACLE
DAY01:
知识点:DDL以及DML操作
1:创建emp表与dept表
2:将数据插入到emp表与dept表。
3:将员工SCOTT的部门改为50

DAY02:
2:数据类型以及相关函数
1:查询emp表中数据，列出一列，内容为名字与职位
  显示格式：ename:job

2:查看每个员工职位的字符个数

3:将所有员工的名字以小写形式，与首字母大写形式
   查询出来，第一列为小写形式，第二列为首字母大写

4:将字符串'aaaaaabaaaaa'中左右两边的a去除

5:显示每个员工的名字，要求显示10位，第一列左对齐效果，第二列    右对齐效果
6:截取字符串'DOCTOR WHO'中的'WHO'
7:查看'DOCTOR WHO'中'WHO'的位置
8:分别查看55.789四舍五入保留小数点后2位，整数位，十位后的
   数字，显示成三列。
9:分别查看55.789截取后保留小数点后2位，整数位，十位后的
   数字，显示成三列。
10：查看每名员工工资百位以下的数字?
11:查看每名员工从入职到今天一共多少天，若有小数则向上取整。
12:查看从2008-08-08号到今天为止一共经历了多少天?
13:将每名员工入职时间以例如:
     1981年12月3日
     的形式显示
14：查看每个员工入职所在月的月底是哪天?
15:查看每名员工转正日期(入职后3个月)
16：查看每名员工入职至今共多少个月?
17:查看从明天开始一周内的周日是哪天?
18:查看82年以后入职的员工的入职日期，82年以前的按照
     1982年01月01号显示。格式都是DD-MON-RR(默认格式)
19:查看每名员工的入职年份?
20:显示每个员工的总收入(工资加奖金)，奖金为NULL的只看工资
21:使用NVL2实现20题的需求

DAY03:
知识点:SQL中的WHERE，聚合函数，分组,关联查询，内连接，外连接，自连接
1:查看工资高于2000的员工
2:查看不是"CLERK"职位的员工
3:查看工资在1000-2500之间的员工
4:查看名字是以K结尾的员工
5:查看20,30号部门的员工
6:查看奖金为NULL的员工
7:查看年薪高于20000的员工
8:查看公司共有多少种职位
9:按部门号从小到大排列查看员工
10:查看每个部门的最高，最低，平均工资，和工资总和
11:查看平均工资高于2000的部门的最低薪水
12:查看在NEWYORK工作的员工
13:查看所有员工及所在部门信息，若该员工没有部门，则
    部门信息以NULL显示
14:查看ALLEN的上司是谁

DAY04:
知识点:子查询，分页，排序函数，高级分组函数
1:查看与CLARK相同职位的员工
2:查看低于公司平均工资的员工
3:查看与ALLEN同部门的员工
4:查看平均工资低于20号部门平均工资的部门平均工资
5:查看低于自己所在部门平均工资的员工
6:查看公司工资排名的第1-5名
7:查看CLERK职位的人数和其他职位的总人数各多少?
8:查看每个职位的工资排名
9:查看每个职位的工资排名，若工资一致，排名一致
10:查看每个职位的工资排名，若工资一致，排名一致，不跳名次。
11:分别查看:同部门同职位，同职位，以及所有员工的工资总和
12:分别查看:同部门同职位，同职位，同部门以及所有员工的工资总和
13:分别查看同部门同职位和同职位的员工的工资总和

DAY05:
知识点:视图，索引，序列，约束
1:创建一个视图，包含20号部门的员工信息，字段:empno,ename,sal,job,deptno
2:创建一个序列seq_emp_no,从10开始，步进为10
3:编写SQL语句查看seq_emp_no序列的下一个数字
4:编写SQL语句查看seq_emp_no序列的当前数字
5:为emp表的ename字段添加索引:idx_emp_ename 
6:为emp表的LOWER(ename)字段添加索引:idx_emp_lower_ename
7:为emp表的sal,comm添加多列索引
8:创建myemployee表，字段:
  id NUMBER(4) ,
  nameVARCHAR2(20),
  birthday DATE,
  telephone VARCHAR2(11)
  scoreNUMBER(9,2)
  其中id作为主键，name要求不能为空,telephone需要唯一,score值必须>=0





